"""
Teste de edi√ß√£o manual do perfil de Maria
"""
import requests
import json

BASE_URL = "http://127.0.0.1:8002"

print("üß™ Testando edi√ß√£o do perfil de Maria (ID 1)\n")

# Dados de teste
dados_maria_atualizada = {
    "historia_verde": "Minha jornada ESG come√ßou h√° 5 anos quando percebi o impacto real das mudan√ßas clim√°ticas. Desde ent√£o, trabalho para transformar empresas em agentes de mudan√ßa positiva, implementando pr√°ticas sustent√°veis que geram resultados mensur√°veis. J√° ajudei mais de 15 empresas a reduzirem suas emiss√µes e melhorarem seus indicadores ESG.",
    "motivacao": "Acredito que cada a√ß√£o conta e que empresas t√™m o poder de liderar a transi√ß√£o para uma economia verde. Meu objetivo √© provar que sustentabilidade e lucratividade caminham juntas.",
    "valores_pessoais": "Transpar√™ncia, Impacto Real, Colabora√ß√£o, Inova√ß√£o Sustent√°vel, Responsabilidade",
    "objetivos_carreira": "Liderar programas de transforma√ß√£o ESG em grandes corpora√ß√µes e desenvolver uma consultoria pr√≥pria focada em pequenas e m√©dias empresas.",
    "conquistas_json": json.dumps([
        {
            "titulo": "Redu√ß√£o de 40% nas Emiss√µes",
            "descricao": "Implementei programa que reduziu emiss√µes de CO2 em 40% em grande ind√∫stria",
            "data": "2024",
            "icone": "üåç"
        },
        {
            "titulo": "Certifica√ß√£o ISO 14001",
            "descricao": "Lidera√ß√£o no processo de certifica√ß√£o ambiental internacional",
            "data": "2023",
            "icone": "üèÜ"
        },
        {
            "titulo": "Pr√™mio ESG Excellence",
            "descricao": "Reconhecimento por projeto inovador de economia circular",
            "data": "2023",
            "icone": "‚≠ê"
        },
        {
            "titulo": "15+ Empresas Transformadas",
            "descricao": "Total de organiza√ß√µes que implementaram programas ESG sob minha coordena√ß√£o",
            "data": "2019-2024",
            "icone": "üìä"
        }
    ], ensure_ascii=False),
    "portfolio_projetos_json": json.dumps([
        {
            "titulo": "Sistema de Reciclagem Industrial",
            "empresa": "TechManufacturing S.A.",
            "descricao": "Implementa√ß√£o completa de sistema de reciclagem que transformou 90% dos res√≠duos industriais em mat√©ria-prima reutiliz√°vel.",
            "periodo": "Jan 2023 - Dez 2023",
            "resultados": ["90% de materiais reciclados", "R$500mil em economia anual", "300 toneladas CO2 evitadas"],
            "ods": [12, 13, 9],
            "tecnologias": ["An√°lise de Ciclo de Vida", "Gest√£o de Res√≠duos", "Power BI"]
        },
        {
            "titulo": "Transi√ß√£o para Energia Renov√°vel",
            "empresa": "EcoLogistics LTDA",
            "descricao": "Projeto de migra√ß√£o completa da matriz energ√©tica para fontes 100% renov√°veis, incluindo instala√ß√£o de pain√©is solares e contratos de energia verde.",
            "periodo": "Jun 2022 - Mai 2023",
            "resultados": ["100% energia renov√°vel", "60% redu√ß√£o custos energia", "Payback em 5 anos"],
            "ods": [7, 13],
            "tecnologias": ["Energia Solar", "An√°lise de Viabilidade", "Excel Avan√ßado"]
        },
        {
            "titulo": "Invent√°rio de Emiss√µes GEE",
            "empresa": "Rede Varejo Verde",
            "descricao": "Estrutura√ß√£o e execu√ß√£o do primeiro invent√°rio completo de gases de efeito estufa em rede com 50 lojas, estabelecendo linha de base para metas de neutralidade.",
            "periodo": "Mar 2021 - Out 2021",
            "resultados": ["1.200 tonCO2eq mapeadas", "Plano de redu√ß√£o 5 anos", "Selo Carbono Neutro"],
            "ods": [13, 17],
            "tecnologias": ["GHG Protocol", "Metodologia IPCC", "Relat√≥rio GRI"]
        }
    ], ensure_ascii=False),
    "idiomas_json": json.dumps([
        {"idioma": "Portugu√™s", "nivel": "Nativo"},
        {"idioma": "Ingl√™s", "nivel": "Fluente"},
        {"idioma": "Espanhol", "nivel": "Intermedi√°rio"}
    ], ensure_ascii=False)
}

print("üìù Dados a serem salvos:")
print(f"  Hist√≥ria: {len(dados_maria_atualizada['historia_verde'])} caracteres")
print(f"  Conquistas: 4 items")
print(f"  Projetos: 3 items")
print(f"  Idiomas: 3 items\n")

# Fazer PUT
url = f"{BASE_URL}/api/profissionais/api/1/storytelling"
response = requests.put(url, json=dados_maria_atualizada)

if response.status_code == 200:
    result = response.json()
    print(f"‚úÖ Salvamento bem-sucedido!")
    print(f"   Resposta: {result}\n")
    
    # Verificar se foi salvo
    print("üîç Verificando se dados foram persistidos...")
    response_get = requests.get(url)
    if response_get.status_code == 200:
        data = response_get.json()
        print(f"‚úÖ Hist√≥ria carregada: {len(data.get('historia_verde', ''))} chars")
        print(f"‚úÖ Conquistas: {len(data.get('conquistas', []))} items")
        print(f"‚úÖ Projetos: {len(data.get('portfolio_projetos', []))} items")
        print(f"‚úÖ Idiomas: {len(data.get('idiomas', []))} items")
        
        if "transformar empresas em agentes de mudan√ßa" in data.get('historia_verde', ''):
            print(f"\nüéâ SUCESSO! Dados foram salvos e carregados corretamente!")
            print(f"\nüîó Veja o perfil: http://127.0.0.1:8002/api/profissionais/perfil/1")
        else:
            print(f"\n‚ö†Ô∏è Dados parecem diferentes do esperado")
    else:
        print(f"‚ùå Erro ao carregar: {response_get.status_code}")
else:
    print(f"‚ùå Erro ao salvar: {response.status_code}")
    print(f"   {response.text}")
